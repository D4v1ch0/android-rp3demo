package ec.com.rp3.demo.models;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import android.database.Cursor;

import rp3.db.sqlite.DataBase;
import rp3.util.CursorUtils;

import ec.com.rp3.demo.db.Contract;

public class Order extends rp3.data.entity.EntityBase<Order> {

	private long id;
	private String user;
	private String client;
	private String code;
	private String product;
	private long quantity;
	private Date orderDate;
	private double latitude;
    private double longitude;
    private String address;
	
	@Override
	public long getID() {		
		return id;
	}

	@Override
	public void setID(long id) {		
		this.id = id;
	}

	@Override
	public boolean isAutoGeneratedId() {		
		return true;
	}

	@Override
	public String getTableName() {		
		return Contract.Order.TABLE_NAME;
	}

	@Override
	public void setValues() {	
		setValue(Contract.Order.COLUMN_CODE, this.code);
		setValue(Contract.Order.COLUMN_LATITUDE, this.latitude);
		setValue(Contract.Order.COLUMN_LONGITUDE, this.longitude);
		setValue(Contract.Order.COLUMN_ORDER_DATE, this.orderDate);
		setValue(Contract.Order.COLUMN_PRODUCT, this.product);
		setValue(Contract.Order.COLUMN_QUANTITY, this.quantity);
		setValue(Contract.Order.COLUMN_USER, this.user);
		setValue(Contract.Order.COLUMN_ADDRESS, this.address);
		setValue(Contract.Order.COLUMN_CLIENT, this.client);
	}

	@Override
	public Object getValue(String key) {		
		return null;
	}

	@Override
	public String getDescription() {		
		return this.product;
	}

	public String getUser() {
		return user;
	}

	public void setUser(String user) {
		this.user = user;
	}

	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	public String getProduct() {
		return product;
	}

	public void setProduct(String product) {
		this.product = product;
	}

	public long getQuantity() {
		return quantity;
	}

	public void setQuantity(long quantity) {
		this.quantity = quantity;
	}

	public double getLatitude() {
		return latitude;
	}

	public void setLatitude(double latitude) {
		this.latitude = latitude;
	}

	public double getLongitude() {
		return longitude;
	}

	public void setLongitude(double longitude) {
		this.longitude = longitude;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public Date getOrderDate() {
		return orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}
	
	public void setCodeAut(){
		this.code = String.valueOf(this.getOrderDate().getTime());
	}

	public String getClient() {
		return client;
	}

	public void setClient(String client) {
		this.client = client;
	}
	
	public static List<Order> initOrder(DataBase db){
		List<Order> order = new ArrayList<Order>();
		List<Product> products = Product.getProducts(db);
		for(Product p: products){
			Order o = new Order();
			o.setProduct(p.getName());			
			order.add(o);
		}
		return order;
	}
	
	public static List<Order> getOrder(DataBase db, String code){
		Cursor c = db.query(Contract.Order.TABLE_NAME, new String[]{
			Contract.Order.COLUMN_ADDRESS,
			Contract.Order.COLUMN_CODE,
			Contract.Order.COLUMN_LATITUDE,
			Contract.Order.COLUMN_LONGITUDE,
			Contract.Order.COLUMN_ORDER_DATE,
			Contract.Order.COLUMN_PRODUCT,
			Contract.Order.COLUMN_QUANTITY,
			Contract.Order.COLUMN_USER,
			Contract.Order.COLUMN_CLIENT
		}, Contract.Order.COLUMN_CODE + " = ?", code);
		
		List<Order> list = new ArrayList<Order>();
		while(c.moveToNext()){
			Order o = new Order();
			o.setAddress( CursorUtils.getString(c, Contract.Order.FIELD_ADDRESS) );
			o.setCode( CursorUtils.getString(c, Contract.Order.FIELD_CODE) );
			o.setLatitude( CursorUtils.getDouble(c, Contract.Order.FIELD_LATITUDE) );
			o.setLongitude( CursorUtils.getDouble(c, Contract.Order.FIELD_LONGITUDE) );
			o.setOrderDate( CursorUtils.getDate(c, Contract.Order.FIELD_ORDER_DATE) );
			o.setProduct( CursorUtils.getString(c, Contract.Order.FIELD_PRODUCT) );
			o.setQuantity( CursorUtils.getLong(c, Contract.Order.FIELD_QUANTITY) );
			o.setUser( CursorUtils.getString(c, Contract.Order.FIELD_USER) );
			o.setClient( CursorUtils.getString(c, Contract.Order.FIELD_CLIENT) );
			
			list.add(o);
		}
		return list;
	}
	
}
